// app.js - Th√™m x·ª≠ l√Ω s·ª± ki·ªán cho n√∫t th√†nh t·ª±u
document.addEventListener('DOMContentLoaded', function() {
    updatePointsDisplay();
    updateStats();
    renderProvinces();
    setupModal();
    setupSearch();
    setupAchievementModal(); // Th√™m d√≤ng n√†y
});

// Th√™m h√†m thi·∫øt l·∫≠p modal th√†nh t·ª±u
function setupAchievementModal() {
    const achievementBtn = document.getElementById('achievement-btn');
    const achievementModal = document.getElementById('achievement-modal');
    const closeBtn = achievementModal.querySelector('.close');
    
    // M·ªü modal khi nh·∫•n n√∫t th√†nh t·ª±u
    achievementBtn.addEventListener('click', function() {
        updateAchievementModal();
        achievementModal.style.display = 'block';
    });
    
    // ƒê√≥ng modal
    closeBtn.addEventListener('click', function() {
        achievementModal.style.display = 'none';
    });
    
    // ƒê√≥ng modal khi click b√™n ngo√†i
    window.addEventListener('click', function(event) {
        if (event.target === achievementModal) {
            achievementModal.style.display = 'none';
        }
    });
}
// C·∫≠p nh·∫≠t n·ªôi dung modal th√†nh t·ª±u
function updateAchievementModal() {
    const nextRankIndex = ranks.findIndex(rank => rank.minPoints > totalPoints);
    const currentRankIndex = nextRankIndex > 0 ? nextRankIndex - 1 : 0;
    const currentRank = ranks[currentRankIndex];
    const nextRank = nextRankIndex >= 0 ? ranks[nextRankIndex] : null;

    // C·∫≠p nh·∫≠t icon
    document.getElementById('achievement-icon').className = `fas ${currentRank.icon}`;

    // C·∫≠p nh·∫≠t rank
    document.getElementById('achievement-rank').textContent = currentRank.name;

    // C·∫≠p nh·∫≠t ƒëi·ªÉm
    document.getElementById('achievement-points').textContent = `${totalPoints} ƒëi·ªÉm`;

    let progressPercentage = 100;
    let progressText = "B·∫°n ƒë√£ ƒë·∫°t th·ª© h·∫°ng cao nh·∫•t! üéâ";
    let pointsNeeded = 0;

    if (nextRank) {
        const pointsForCurrentRank = currentRank.minPoints;
        const pointsForNextRank = nextRank.minPoints;
        const totalPointsNeeded = pointsForNextRank - pointsForCurrentRank;
        const pointsEarnedInRank = totalPoints - pointsForCurrentRank;

        progressPercentage = (pointsEarnedInRank / totalPointsNeeded) * 100;
        pointsNeeded = pointsForNextRank - totalPoints;
        
        // Lo·∫°i b·ªè d√≤ng ch·ªØ n√†y
        // progressText = `C√≤n ${pointsNeeded} ƒëi·ªÉm ƒë·ªÉ t·ªõi ${nextRank.name}`;
        
        // Ho·∫∑c c√≥ th·ªÉ ƒë·∫∑t l·∫°i gi√° tr·ªã r·ªóng n·∫øu mu·ªën b·ªè ho√†n to√†n
        progressText = ''; 
    }

    const roundedPercentage = Math.round(progressPercentage);

    // C·∫≠p nh·∫≠t thanh ti·∫øn tr√¨nh (chi·ªÅu r·ªông)
    const progressBar = document.querySelector('#achievement-progress .progress-bar');
    if (progressBar) {
        progressBar.style.width = `${Math.min(roundedPercentage, 100)}%`;
    }

    // C·∫≠p nh·∫≠t text ph·∫ßn trƒÉm (tr√™n thanh)
    document.getElementById('progress-percentage').textContent = `${roundedPercentage}%`;

    // C·∫≠p nh·∫≠t text ti·∫øn tr√¨nh (d∆∞·ªõi thanh)
    document.getElementById('progress-text').textContent = progressText;
}